{"version":3,"file":"static/js/97.4291754c.chunk.js","mappings":"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","sources":["config/address.js","compoments/Demo1/Demo1-top.js","hooks/useFeach.js","compoments/Demo1/Demo1-bottom.js","view/Demo1/Demo1.js"],"sourcesContent":["let obj = {\r\n    Demo1Address: '0x565532db18dc4ac35af3eef7905a1bdb97ddea85',\r\n    // Demo2Address: '0x585b3148c1e214e12d3a2110753d8b1c6901f6aa'\r\n    Demo2Address: '0x56843b09891615d03c0ae7728498562a6f21dad1'\r\n}\r\nexport default obj","import React from 'react'\r\nimport './Demo1-top.css'\r\n// import Button from '@material-ui/core/Button';\r\nimport { message, Card, Form, Input, Button, Spin } from 'antd';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport { useEffect, useState, useRef } from 'react';\r\nimport { ethers, utils } from 'ethers'\r\nimport { Link } from 'react-router-dom'\r\nimport { CreditCardOutlined } from '@ant-design/icons';\r\nimport axios from 'axios'\r\nexport default function Demo1Top(props) {\r\n    const { account, initEthers, etherInfo, getList } = props\r\n    const formRef = useRef(null)\r\n    const [loading, setLoading] = useState(false)\r\n    const antIcon = (\r\n        <LoadingOutlined\r\n            style={{\r\n                fontSize: 24,\r\n            }}\r\n            spin\r\n        />)\r\n    const connectWallet = async () => {\r\n        const { ethereum } = window\r\n        if (!window.ethereum) {\r\n            message.error('请先安装metamask');\r\n            return\r\n        }\r\n        try {\r\n            const account = await ethereum.request({ method: 'eth_requestAccounts' })\r\n            if (account.length) {\r\n                // dispatch(setAccount(account[0]))\r\n                initEthers()\r\n            }\r\n        } catch (error) {\r\n            message.error(error.message);\r\n            console.error(error)\r\n        }\r\n    }\r\n    useEffect(() => {\r\n\r\n        if (etherInfo) {\r\n            initList()\r\n        }\r\n    }, [etherInfo]);\r\n    const initList = async () => {\r\n        // console.log(etherInfo.demo1Contract)\r\n        // const res = await etherInfo.demo1Contract.getInfoMapping()\r\n        // console.warn('res', res)\r\n\r\n    }\r\n    const handleText = (str) => {\r\n        str ??= ''\r\n        return str.substr(0, 5) + '.....' + str.substr(-5)\r\n    }\r\n    const onFinish = async (values) => {\r\n        // console.log('Success:', values, state);\r\n        const { ethereum } = window\r\n        const { demo1Contract, signer } = etherInfo\r\n        if (!ethereum) return\r\n        try {\r\n            console.log(ethers.utils.parseEther(values.amount)._hex + '')\r\n            // let params = [{\r\n            //     \"from\": account,\r\n            //     \"to\": values.recipient,\r\n            //     \"gas\": \"0x5208\", // 21000，\r\n            //     // 将eth类型转成wei类型\r\n            //     value: ethers.utils.parseUnits(values.amount, 'ether')._hex\r\n            // }];\r\n            // const gifInfo = await axios.get(`https://api.giphy.com/v1/gifs/search?api_key=eMPhvX5jeWEtOcLrwiqhN5zqi9K80boe&q=${encodeURIComponent(values.keyword)}&limit=1&offset=0&rating=g&lang=zh-CN`)\r\n            // console.warn(gifInfo?.data?.data[0]?.images?.downsized_medium?.url)\r\n            setLoading(true)\r\n            console.log('value',ethers.utils.parseUnits(values.amount + '', 18)._hex)\r\n            await signer.sendTransaction({ to: values.recipient, value: ethers.utils.parseUnits(values.amount + '', 18)._hex, gasLimit: '0x5208' })\r\n            const demo1Hash = await demo1Contract.setInfoArray(values.recipient, ethers.utils.parseUnits(values.amount + '', 18)._hex, values.message, values.keyword)\r\n            await demo1Hash.wait()\r\n            const infoList = await demo1Contract.getInfoMapping()\r\n            setLoading(false)\r\n            console.log(infoList, 'infoList')\r\n            getList()\r\n            formRef.current.resetFields()\r\n\r\n        } catch (error) {\r\n            message.error(error.message);\r\n            console.error(error)\r\n            setLoading(false)\r\n        }\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n    return (\r\n        <div className='demo-top-wrap'>\r\n            <div className='demo-top-left'>\r\n                <div className='left-title'>\r\n                    Welcome !\r\n                    <br />\r\n                    send your transaction in this demo\r\n                </div>\r\n                <div className='left-btn'>\r\n                    {\r\n                        account ? (<Button style={{ background: 'rgb(26,28,48)', color: '#1677ff', borderColor: '#1677ff' }} variant=\"outlined\" color=\"primary\">\r\n                            已连接metamask账户\r\n                        </Button>) : (<Button onClick={connectWallet} style={{ background: 'rgb(26,28,48)', color: 'rgb(245, 239, 239)' }} variant=\"contained\" color=\"primary\">\r\n                            Connect Wallet\r\n                        </Button>)\r\n                    }\r\n                </div>\r\n                <div className='left-other'>\r\n                    <div>\r\n                        <Link to='https://reactjs.org/'>React.js</Link>\r\n                        <Link to='https://ant.design/components/message-cn'>Antd</Link>\r\n                        <Link to='https://learnblockchain.cn/ethers_v5/getting-started/'>Ether.js</Link>\r\n                    </div>\r\n                    <div>\r\n                        <Link >Web3.0</Link>\r\n                        <Link >MetaMask</Link>\r\n                        <Link>BlockChain</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='demo-top-right'>\r\n                <Card title={''} bordered={false}>\r\n                    <CreditCardOutlined style={{ color: 'white', fontSize: '20px' }} />\r\n                    <div className='account' title={account}>{handleText(account)}</div>\r\n                    <span className='ethereum'>Ethereum</span>\r\n                </Card>\r\n                <div className='demo-top-right-bottom'>\r\n                    <Form\r\n                        ref={formRef}\r\n                        name=\"basic\"\r\n                        labelCol={{ span: 8 }}\r\n                        wrapperCol={{ span: 16 }}\r\n                        style={{ maxWidth: 600 }}\r\n                        initialValues={{ remember: false }}\r\n                        onFinish={onFinish}\r\n                        onFinishFailed={onFinishFailed}\r\n                        autoComplete=\"off\"\r\n                    >\r\n                        <Form.Item\r\n                            name=\"recipient\"\r\n                            rules={[{ required: true, message: 'Please input your Address To!' }]}\r\n                        >\r\n                            <Input id=\"public-input\" placeholder='Address To' />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            name=\"amount\"\r\n                            rules={[{ required: true, message: 'Please input your Amount!' }]}\r\n                        >\r\n                            <Input id=\"public-input\" placeholder='Amount(ETH)' />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"keyword\"\r\n                            rules={[{ required: true, message: 'Please input your keyword!' }]}\r\n                        >\r\n                            <Input id=\"public-input\" placeholder='Keyword(Gif)' />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"message\"\r\n                            rules={[{ required: true, message: 'Please input your message!' }]}\r\n                        >\r\n                            <Input id=\"public-input\" placeholder='Enter Message' />\r\n                        </Form.Item>\r\n                        <Form.Item >\r\n                            {\r\n                                loading ? <Spin indicator={antIcon} /> : <Button htmlType=\"submit\" style={{ background: 'rgb(26,28,48)', width: '90%', color: '#ccc' }} variant=\"contained\" color=\"primary\" >\r\n                                    Send Now\r\n                                </Button>\r\n                            }\r\n\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n","import { useEffect, useState, } from 'react';\r\nimport axios from 'axios'\r\nfunction useFeach(props) {\r\n    const { keyword } = props\r\n    const [imgUrl, setImgurl] = useState('')\r\n    const initUrl = async () => {\r\n        const gifInfo = await axios.get(`https://api.giphy.com/v1/gifs/search?api_key=eMPhvX5jeWEtOcLrwiqhN5zqi9K80boe&q=${encodeURIComponent(keyword)}&limit=1&offset=0&rating=g&lang=zh-CN`)\r\n        let url = gifInfo?.data?.data[0]?.images?.downsized_medium?.url\r\n        setImgurl(url)\r\n    }\r\n    useEffect(() => {\r\n        if (keyword) {\r\n            initUrl()\r\n        }\r\n    }, [keyword])\r\n    return imgUrl\r\n}\r\n\r\nexport default useFeach;","import React from 'react'\r\nimport './Demo1-bottom.css'\r\n// import Button from '@material-ui/core/Button';\r\nimport { message, Card, Form, Input, Button, Spin } from 'antd';\r\nimport { useEffect, useState, useRef, forwardRef, useImperativeHandle } from 'react';\r\nimport { ethers, utils } from 'ethers'\r\nimport useFeach from '../../hooks/useFeach';\r\nfunction Demo1Top(props, ref) {\r\n    const { account, initEthers, etherInfo } = props\r\n    const formRef = useRef(null)\r\n    const [listArr, setListArr] = useState([])\r\n    const { Meta } = Card;\r\n    const handleText = (str) => {\r\n        str ??= ''\r\n        return str.substr(0, 5) + '....' + str.substr(-5)\r\n    }\r\n    useImperativeHandle(ref, () => ({\r\n        getInfo: () => {\r\n            init()\r\n        }\r\n    }))\r\n    useEffect(() => {\r\n        if (etherInfo) {\r\n            init()\r\n        }\r\n    }, [etherInfo]);\r\n    const init = async () => {\r\n        const res = await etherInfo.demo1Contract.getInfoMapping()\r\n        let arr = res.map(item => {\r\n            return {\r\n                amount: item.amount,\r\n                sender: item.sender,\r\n                recipient: item.recipient,\r\n                keyword: item.keyword,\r\n                message: item.message,\r\n                timestamp: new Date(parseInt(item.timestamp._hex, 16) * 1000).toLocaleDateString()\r\n            }\r\n        })\r\n        setListArr(arr)\r\n        console.warn(arr, res)\r\n    }\r\n    return (\r\n        <div className='demo-bottom-wrap'>\r\n            <h2>Latest Transactions</h2>\r\n            <div className='card-list'>\r\n                {\r\n                    listArr.map((item, index) => {\r\n                        return (<CardItem key={index} item={item} handleText={handleText}></CardItem>)\r\n                    })\r\n                }\r\n                {/* <Card\r\n                    hoverable\r\n                    style={{ width: 240 }}\r\n                    cover={<img alt=\"example\" src=\"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\" />}\r\n                >\r\n                    <Meta title=\"Europe Street beat\" description=\"www.instagram.com\" />\r\n                </Card> */}\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\nconst CardItem = (props) => {\r\n    const { item, handleText } = props\r\n    const imgUrl = useFeach({ keyword: item.keyword })\r\n    return (<div className='card-item' >\r\n        <div className='card-info'>\r\n            <p>from : &nbsp;<span>{handleText(item.sender)}</span></p>\r\n            <p>to : &nbsp;<span>{handleText(item.recipient)}</span></p>\r\n            <p>Amount : &nbsp;<span>{ethers.utils.formatEther(item.amount)} ETH</span></p>\r\n        </div>\r\n        <p className='time-stamp'>{item.timestamp}</p>\r\n        <img alt=\"example\" src={imgUrl} />\r\n    </div>)\r\n}\r\nexport default forwardRef(Demo1Top)","import React, { createRef } from 'react'\r\nimport './Demo1.css'\r\nimport Demo1Top from '@/compoments/Demo1/Demo1-top'\r\nimport Demo1Bottom from '@/compoments/Demo1/Demo1-bottom'\r\nimport { ethers } from 'ethers'\r\nimport { useEffect, useState,useRef } from 'react';\r\nimport demo1Abi from '@/build/Demo1.json'\r\nimport addressObj from '@/config/address.js'\r\nexport default function Demo1() {\r\n    const [account, setAccount] = useState('')\r\n    const [etherInfo, setEtherInfo] = useState(null)\r\n    const Demo1BottomRef = useRef(null)\r\n    const requestAccount = async () => {\r\n        const { ethereum } = window\r\n        if (!window.ethereum) {\r\n            return\r\n        }\r\n        const acct = await ethereum.request({ method: 'eth_accounts' })\r\n        if (acct.length) {\r\n            setAccount(acct[0])\r\n            initEthers()\r\n        }\r\n        // 账号改变时触发\r\n        ethereum.on('accountsChanged', function (accounts) {\r\n            console.log('accountsChanged', accounts)\r\n            setAccount(accounts[0] ?? '')\r\n            initEthers()\r\n            // window.location.reload()\r\n        })\r\n    }\r\n    const getList = () => {\r\n        Demo1BottomRef.current.getInfo()\r\n    }\r\n    const initEthers = async () => {\r\n        // if (!account) return\r\n        const provider = new ethers.providers.Web3Provider(window.ethereum)\r\n        const signer = provider.getSigner()\r\n        const address = await signer.getAddress()\r\n        const demo1Contract = new ethers.Contract(addressObj.Demo1Address, demo1Abi.abi, signer);\r\n        let obj = {\r\n            provider,\r\n            signer,\r\n            address,\r\n            demo1Contract,\r\n        }\r\n        setEtherInfo(\r\n            obj\r\n        )\r\n    }\r\n    useEffect(() => {\r\n        requestAccount()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='demo-wrap'>\r\n            <Demo1Top account={account} initEthers={initEthers} etherInfo={etherInfo} getList={getList}></Demo1Top>\r\n            <Demo1Bottom ref={Demo1BottomRef} account={account} initEthers={initEthers} etherInfo={etherInfo}></Demo1Bottom>\r\n        </div>\r\n    )\r\n}\r\n"],"names":["Demo1Address","Demo2Address","Demo1Top","props","account","initEthers","etherInfo","getList","formRef","useRef","useState","loading","setLoading","antIcon","LoadingOutlined","style","fontSize","spin","connectWallet","window","ethereum","message","request","method","length","console","error","useEffect","initList","onFinish","values","demo1Contract","signer","log","ethers","amount","_hex","sendTransaction","to","recipient","value","gasLimit","setInfoArray","keyword","demo1Hash","wait","getInfoMapping","infoList","current","resetFields","className","background","color","borderColor","variant","onClick","title","bordered","CreditCardOutlined","str","substr","handleText","ref","name","labelCol","span","wrapperCol","maxWidth","initialValues","remember","onFinishFailed","errorInfo","autoComplete","rules","required","id","placeholder","indicator","htmlType","width","imgUrl","setImgurl","initUrl","axios","encodeURIComponent","gifInfo","url","data","images","downsized_medium","listArr","setListArr","Card","useImperativeHandle","getInfo","init","res","arr","map","item","sender","timestamp","Date","parseInt","toLocaleDateString","warn","index","CardItem","useFeach","alt","src","forwardRef","Demo1","setAccount","setEtherInfo","Demo1BottomRef","requestAccount","acct","on","accounts","provider","getSigner","getAddress","address","addressObj","demo1Abi"],"sourceRoot":""}